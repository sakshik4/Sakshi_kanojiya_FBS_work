MySQL Assignment -1 (DDL)

1. Login to MySQL and view all databases already present. You should get
following result :

=> mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.01 sec)



2. Write an SQL statement to create a simple table countries including columns
country_id,country_name and region_id. After this display the structure of
table as below :
=>

mysql> create database Country;
Query OK, 1 row affected (0.01 sec)

mysql> use Country;
Database changed

mysql> create table countries(country_id int(11),country_name varchar(20),region_id int(11));
Query OK, 0 rows affected, 2 warnings (0.03 sec)

mysql> desc countries;
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| country_id   | int         | YES  |     | NULL    |       |
| country_name | varchar(20) | YES  |     | NULL    |       |
| region_id    | int         | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+
3 rows in set (0.01 sec)




3. Write an SQL statement to create a table named jobs including columns
job_id, job_title, min_salary, max_salary and check whether the max_salary amount exceeding the upper limit 25000. Also set job_id as
primary key and entering null values for job_title is not allowed.
=>
mysql> create table jobs (job_id int primary key,
    ->     job_title VARCHAR(100) not null,
    ->     min_salary decimal(10, 2),
    ->     max_salary decimal(10, 2),
    ->     check (max_salary <= 25000));
Query OK, 0 rows affected (0.03 sec)




4. Write a SQL statement to create a table named job_histry including columns
employee_id, start_date, end_date, job_id and department_id
=>
mysql> create table job_history(employee_id int, start_date date, end_date date, job_id int, department_id int);




5.Write an SQL statement to alter a table named countries to make sure that no
duplicate data against column country_id will be allowed at the time of
insertion.
=>
mysql> alter table countries add constraint country_id unique (country_id);



6. Write an SQL statement to create a table named jobs including columns job_id,
job_title, min_salary and max_salary, and make sure that, the default value
for job_title is blank and min_salary is 8000 and max_salary is NULL will be
entered automatically at the time of insertion if no value assigned for the
specified columns.
=>
mysql> create table job(job_id int,
    ->     job_title varchar(100)default '',
    ->     min_salary decimal(10, 2) default 8000,
    ->     max_salary decimal(10, 2) default null);
Query OK, 0 rows affected (0.07 sec)


7. Create a Department table with following structure.
=>
mysql> create table Department(DEPARTMENT_ID decimal(4,0),
    -> DEPARTMENT_NAME varchar(30) not null,
    -> MANAGER_ID decimal(6,0)not null,
    -> LOCATION_ID decimal(4,0),
    -> primary key(DEPARTMENT_ID,MANAGER_ID ));
Query OK, 0 rows affected (0.03 sec)

mysql> desc Department;
+-----------------+--------------+------+-----+---------+-------+
| Field           | Type         | Null | Key | Default | Extra |
+-----------------+--------------+------+-----+---------+-------+
| DEPARTMENT_ID   | decimal(4,0) | NO   | PRI | NULL    |       |
| DEPARTMENT_NAME | varchar(30)  | NO   |     | NULL    |       |
| MANAGER_ID      | decimal(6,0) | NO   | PRI | NULL    |       |
| LOCATION_ID     | decimal(4,0) | YES  |     | NULL    |       |
+-----------------+--------------+------+-----+---------+-------+



8.Write an SQL statement to create a table employees including columns
employee_id, first_name, last_name, email, phone_number hire_date, job_id,
salary, commission, manager_id and department_id and make sure that, the
employee_id column does not contain any duplicate value at the time of
insertion and the foreign key columns combined by department_id and
manager_id columns contain only those unique combination values, which
combinations are exists in the departments table.
=>
mysql> create table Departments (
    ->     department_id int,
    ->     manager_id int,
    ->     department_name varchar(100),
    ->     PRIMARY KEY (department_id, manager_id));
Query OK, 0 rows affected (0.03 sec)

mysql> CREATE TABLE employees (
    ->     employee_id int primary key,
    ->     first_name varchar(50),
    ->     last_name varchar(50),
    ->     email varchar(100),
    ->     phone_number varchar(20),
    ->     hire_date date,
    ->     job_id varchar(10),
    ->     salary decimal(10, 2),
    ->     commission decimal(5, 2),
    ->     manager_id int,
    ->     department_id int,
    ->     foreign key(department_id, manager_id)
    ->        references departments(department_id, manager_id)
    -> );
Query OK, 0 rows affected (0.06 sec)




